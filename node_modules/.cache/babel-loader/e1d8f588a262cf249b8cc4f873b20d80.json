{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dobri\\\\Downloads\\\\todo-react\\\\src\\\\components\\\\AddTaskForm.tsx\";\nimport React, { useState } from \"react\";\nexport const AddTaskForm = ({\n  addTask\n}) => {\n  const [newUsername, setNewUsername] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n\n  const handleUserChange = e => {\n    setNewUsername(e.target.value);\n  };\n\n  const handlePhoneChange = e => {\n    setNewPhone(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    setNewEmail(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTask({\n      id: 0,\n      username: newUsername,\n      phone: newPhone,\n      email: newEmail,\n      date: new Date(),\n      complete: false\n    });\n    setNewUsername(\"\");\n    setNewPhone(\"\");\n    setNewEmail(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newUsername,\n    onChange: handleUserChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newPhone,\n    onChange: handlePhoneChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: newEmail,\n    onChange: handleEmailChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Add Task\"));\n};","map":{"version":3,"sources":["C:/Users/dobri/Downloads/todo-react/src/components/AddTaskForm.tsx"],"names":["React","useState","AddTaskForm","addTask","newUsername","setNewUsername","newPhone","setNewPhone","newEmail","setNewEmail","handleUserChange","e","target","value","handlePhoneChange","handleEmailChange","handleSubmit","preventDefault","id","username","phone","email","date","Date","complete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAwD,OAAxD;AAOA,OAAO,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACpE,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAS,EAAT,CAAxC;;AAEF,QAAMS,gBAAgB,GAAIC,CAAD,IAAsC;AAC7DN,IAAAA,cAAc,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACD,GAFD;;AAGA,QAAMC,iBAAiB,GAAIH,CAAD,IAAsC;AAC9DJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAGA,QAAME,iBAAiB,GAAIJ,CAAD,IAAsC;AAC9DF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMG,YAAY,GAAIL,CAAD,IAAqC;AACxDA,IAAAA,CAAC,CAACM,cAAF;AACAd,IAAAA,OAAO,CAAC;AAACe,MAAAA,EAAE,EAAE,CAAL;AAAQC,MAAAA,QAAQ,EAAEf,WAAlB;AAA+BgB,MAAAA,KAAK,EAAEd,QAAtC;AAAgDe,MAAAA,KAAK,EAAEb,QAAvD;AAAiEc,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAvE;AAAmFC,MAAAA,QAAQ,EAAE;AAA7F,KAAD,CAAP;AACAnB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEL,WAA1B;AAAuC,IAAA,QAAQ,EAAEM,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEJ,QAA1B;AAAoC,IAAA,QAAQ,EAAEQ,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEN,QAA1B;AAAoC,IAAA,QAAQ,EAAEO,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF;AAUD,CAjCM","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from \"react\";\r\n\r\n\r\ninterface AddTaskFormProps {\r\n  addTask: AddTask;\r\n}\r\n\r\nexport const AddTaskForm: React.FC<AddTaskFormProps> = ({ addTask }) => {\r\n    const [newUsername, setNewUsername] = useState<string>(\"\");\r\n    const [newPhone, setNewPhone] = useState<string>(\"\");\r\n    const [newEmail, setNewEmail] = useState<string>(\"\");\r\n\r\n  const handleUserChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewUsername(e.target.value);\r\n  };\r\n  const handlePhoneChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewPhone(e.target.value);\r\n  };\r\n  const handleEmailChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewEmail(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    addTask({id: 0, username: newUsername, phone: newPhone, email: newEmail, date: new Date(), complete: false});\r\n    setNewUsername(\"\");\r\n    setNewPhone(\"\");\r\n    setNewEmail(\"\");\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input type=\"text\" value={newUsername} onChange={handleUserChange} />\r\n      <input type=\"text\" value={newPhone} onChange={handlePhoneChange} />\r\n      <input type=\"text\" value={newEmail} onChange={handleEmailChange} />\r\n      <button type=\"submit\" onClick={handleSubmit}>\r\n        Add Task\r\n      </button>\r\n    </form>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}